name: Build and Release

on:
  push:
    branches:
      - main
      - develop

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Determine tag name
      id: tag
      run: |
        git fetch --unshallow || true
        BUILD_NUMBER="$(git rev-list --count HEAD)"
        SHORT_HASH="$(git rev-parse --short=7 HEAD)"
        if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
          echo "name=b${BUILD_NUMBER}" >> $GITHUB_OUTPUT
        else
          SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
          echo "name=${SAFE_NAME}-b${BUILD_NUMBER}-${SHORT_HASH}" >> $GITHUB_OUTPUT
        fi

    - name: Build Executable
      run: |
        python -m pip install pyinstaller
        pyinstaller --noconfirm --onefile --windowed --name "password_generator_linux_${{ steps.tag.outputs.name }}" "password_generator.py"

    - name: Archive Artifact
      uses: actions/upload-artifact@v3
      with:
        name: password-generator-linux
        path: dist/password_generator_linux_${{ steps.tag.outputs.name }}


  build_windows:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Determine tag name
      id: tag
      run: |
        git fetch --unshallow || $null
        $BUILD_NUMBER = (git rev-list --count HEAD).ToString()
        $SHORT_HASH = (git rev-parse --short=7 HEAD).ToString()
        if ($env:BRANCH_NAME -eq "main") {
            echo "name=b$BUILD_NUMBER" | Out-File $env:GITHUB_OUTPUT -Append
        } else {
            $SAFE_NAME = $env:BRANCH_NAME -replace '/', '-'
            echo "name=${SAFE_NAME}-b${BUILD_NUMBER}-${SHORT_HASH}" | Out-File $env:GITHUB_OUTPUT -Append
        }

    - name: Build Executable
      run: |
        python -m pip install pyinstaller
        pyinstaller --noconfirm --onefile --windowed --name "password_generator_win_${{ steps.tag.outputs.name }}.exe" --icon "data/DALL_E_preview.ico" --add-data "data;data/" "password_generator.py"  
        
    - name: Archive Artifact
      uses: actions/upload-artifact@v2
      with:
        name: password-generator-windows
        path: dist/password_generator_win_${{ steps.tag.outputs.name }}.exe

  create_release:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Determine tag name
      id: tag
      run: |
        git fetch --unshallow || true
        BUILD_NUMBER="$(git rev-list --count HEAD)"
        SHORT_HASH="$(git rev-parse --short=7 HEAD)"
        if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
          echo "name=b${BUILD_NUMBER}" >> $GITHUB_OUTPUT
        else
          SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
          echo "name=${SAFE_NAME}-b${BUILD_NUMBER}-${SHORT_HASH}" >> $GITHUB_OUTPUT
        fi

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: password-generator-linux
        path: dist_linux

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: password-generator-windows
        path: dist_windows

    - name: Debugging - Print BRANCH_NAME
      run: echo "BRANCH_NAME=${{ env.BRANCH_NAME }}"

    - name: Debugging - Print TAG_NAME
      run: echo "TAG_NAME=${{ steps.tag.outputs.name }}"

    - name: Determine commit name
      id: commit
      run: |
        git fetch --unshallow || true
        BUILD_NUMBER="$(git rev-list --count HEAD)"
        SHORT_HASH="$(git rev-parse --short=7 HEAD)"
        COMMIT_MESSAGE="$(git log --format=%B -n 1 | tr -d '\n' | tr -cd '[:alnum:]' | head -c 10)"
        if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
          COMMIT_NAME="b${BUILD_NUMBER}-${COMMIT_MESSAGE}"
        else
          SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
          COMMIT_NAME="${SAFE_NAME}-b${BUILD_NUMBER}-${SHORT_HASH}-${COMMIT_MESSAGE}"
        fi
        echo "name=${COMMIT_NAME}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist_linux/*
          dist_windows/*
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          Changes in this release:
          - ${{ steps.commit.outputs.name }}
        tag_name: ${{ steps.tag.outputs.name }}
